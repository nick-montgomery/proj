#!/usr/bin/env bash
set -euo pipefail

STATE="${STATE:-$HOME/.cache/current_project}"
EDITOR_CMD="${EDITOR_CMD:-nvim}"
GIT_UI_CMD="${GIT_UI_CMD:-lazygit}"

usage() {
  cat <<EOF
Usage:
  proj set <path>        Set current project (absolute or relative dir)
  proj path              Print current project path
  proj clear             Clear current project
  proj run <cmd...>      Run a command inside the current project
  proj edit              Open \$EDITOR_CMD in current project (default: nvim)
  proj git               Open \$GIT_UI_CMD in current project (default: lazygit)
  proj logs [path]       Open logs viewer for current project (or given path)

Notes:
  - Override commands with EDITOR_CMD / GIT_UI_CMD env vars.
EOF
  exit 1
}

ensure_set() {
  if [ ! -f "$STATE" ] || [ -z "$(cat "$STATE")" ]; then
    echo "No current project set. Use: proj set <path>" >&2
    exit 2
  fi
}

cmd="${1:-}"
shift || true
case "${cmd:-}" in
set)
  p="${1:-}"
  [ -z "${p}" ] && usage
  p="$(readlink -f -- "$p")"
  [ -d "$p" ] || {
    echo "Not a directory: $p" >&2
    exit 3
  }
  mkdir -p "$(dirname "$STATE")"
  printf "%s" "$p" >"$STATE"
  echo "Current project -> $p"
  ;;
path)
  [ -f "$STATE" ] && cat "$STATE" || {
    echo "No current project set." >&2
    exit 3
  }
  ;;
clear)
  rm -f "$STATE"
  echo "Cleared current project."
  ;;
run)
  ensure_set
  projdir="$(cat "$STATE")"
  [ $# -ge 1 ] || {
    echo "Usage: proj run <cmd...>"
    exit 1
  }
  cd "$projdir"
  exec "$@"
  ;;
edit)
  ensure_set
  projdir="$(cat "$STATE")"
  cd "$projdir"
  exec "$EDITOR_CMD" "$projdir"
  ;;
git)
  ensure_set
  projdir="$(cat "$STATE")"
  cd "$projdir"
  exec "$GIT_UI_CMD" -p "$projdir"
  ;;
logs)
  # Use current project unless a path arg provided
  target="${1:-}"
  if [ -z "$target" ]; then
    if [ -f "$STATE" ]; then target="$(cat "$STATE")"; else
      echo "No current project set. Use: proj set <path> or proj logs <path>"
      exit 1
    fi
  fi
  target="$(readlink -f -- "$target")"
  logdir="$target/logs"
  if compgen -G "$logdir/*.log" >/dev/null 2>&1; then
    if command -v lnav >/dev/null 2>&1; then
      exec lnav "$logdir"/*.log
    else
      exec tail -F "$logdir"/*.log
    fi
  else
    echo "No logs in $logdir."
    echo "Hint: mkdir -p '$logdir' && (pnpm run dev 2>&1 | tee '$logdir/app.log')"
  fi
  ;;
"" | help | -h | --help)
  usage
  ;;
*)
  echo "Unknown command: $cmd"
  usage
  ;;
esac
